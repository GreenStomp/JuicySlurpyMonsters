<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SOPRO</name>
    </assembly>
    <members>
        <member name="T:SOPRO.AnimatorPropertyHolder">
            <summary>
            Class that holds an animator property name and calculates its hash value at load time
            </summary>
        </member>
        <member name="F:SOPRO.AnimatorPropertyHolder.PropertyName">
            <summary>
            Property Name
            </summary>
        </member>
        <member name="F:SOPRO.AnimatorPropertyHolder.PropertyHash">
            <summary>
            Calculated property hash at load time
            </summary>
        </member>
        <member name="M:SOPRO.AnimatorPropertyHolder.op_Implicit(SOPRO.AnimatorPropertyHolder)~System.Int32">
            <summary>
            Converts to calculated property hash value
            </summary>
            <param name="prop">property to convert</param>
        </member>
        <member name="M:SOPRO.AnimatorPropertyHolder.op_Implicit(SOPRO.AnimatorPropertyHolder)~System.String">
            <summary>
            Converts to property name value
            </summary>
            <param name="prop">property to convert</param>
        </member>
        <member name="T:SOPRO.LayerHolder">
            <summary>
            Class that holds a Layer name and calculates its index at Editor time
            </summary>
        </member>
        <member name="F:SOPRO.LayerHolder.LayerName">
            <summary>
            Layer name
            </summary>
        </member>
        <member name="F:SOPRO.LayerHolder.LayerIndex">
            <summary>
            Layer index calculated at Editor time
            </summary>
        </member>
        <member name="M:SOPRO.LayerHolder.op_Implicit(SOPRO.LayerHolder)~System.Int32">
            <summary>
            Converts to calculated layer index value
            </summary>
            <param name="layer">layer to convert</param>
        </member>
        <member name="M:SOPRO.LayerHolder.op_Implicit(SOPRO.LayerHolder)~System.String">
            <summary>
            Converts to layer name value
            </summary>
            <param name="layer">layer to convert</param>
        </member>
        <member name="T:SOPRO.ShaderPropertyHolder">
            <summary>
            Class that holds a shader property name and calculates its id value at load time
            </summary>
        </member>
        <member name="F:SOPRO.ShaderPropertyHolder.PropertyName">
            <summary>
            Property Name
            </summary>
        </member>
        <member name="F:SOPRO.ShaderPropertyHolder.PropertyID">
            <summary>
            Calculated property id at load time
            </summary>
        </member>
        <member name="M:SOPRO.ShaderPropertyHolder.op_Implicit(SOPRO.ShaderPropertyHolder)~System.Int32">
            <summary>
            Converts to calculated property id value
            </summary>
            <param name="prop">property to convert</param>
        </member>
        <member name="M:SOPRO.ShaderPropertyHolder.op_Implicit(SOPRO.ShaderPropertyHolder)~System.String">
            <summary>
            Converts to property name value
            </summary>
            <param name="prop">property to convert</param>
        </member>
        <member name="T:SOPRO.Variables.ReferenceString">
            <summary>
            Class that holds a reference to a value
            </summary>
        </member>
        <member name="P:SOPRO.Variables.ReferenceString.UseConstant">
            <summary>
            Determines whenever reference should use a given value or a Variable value
            </summary>
        </member>
        <member name="P:SOPRO.Variables.ReferenceString.Variable">
            <summary>
            Variable currently stored
            </summary>
        </member>
        <member name="P:SOPRO.Variables.ReferenceString.Value">
            <summary>
            Current value
            </summary>
        </member>
        <member name="M:SOPRO.Variables.ReferenceString.#ctor">
            <summary>
            Construct a reference with default state
            </summary>
        </member>
        <member name="M:SOPRO.Variables.ReferenceString.#ctor(System.String)">
            <summary>
            Construct reference given an initial value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SOPRO.Variables.ReferenceString.op_Implicit(SOPRO.Variables.ReferenceString)~System.String">
            <summary>
            Conversion between reference to underlying value
            </summary>
            <param name="reference">reference to convert</param>
        </member>
        <member name="T:SOPRO.Variables.SOVariableString">
            <summary>
            SO that holds a variable
            </summary>
        </member>
        <member name="F:SOPRO.Variables.SOVariableString.Value">
            <summary>
            Value stored in the variable
            </summary>
        </member>
        <member name="M:SOPRO.Variables.SOVariableString.SetValue(System.String)">
            <summary>
            Sets value to given value
            </summary>
            <param name="value">new value</param>
        </member>
        <member name="M:SOPRO.Variables.SOVariableString.SetValue(SOPRO.Variables.SOVariableString)">
            <summary>
            Sets value to given value
            </summary>
            <param name="value">new value</param>
        </member>
        <member name="M:SOPRO.Variables.SOVariableString.ApplyChange(System.String)">
            <summary>
            Increases value of given amount
            </summary>
            <param name="amount">increase amount</param>
        </member>
        <member name="M:SOPRO.Variables.SOVariableString.ApplyChange(SOPRO.Variables.SOVariableString)">
            <summary>
            Increases value of given amount
            </summary>
            <param name="amount">increase amount</param>
        </member>
        <member name="M:SOPRO.Variables.SOVariableString.op_Implicit(SOPRO.Variables.SOVariableString)~System.String">
            <summary>
            Conversion between variable to underlying value
            </summary>
            <param name="reference">variable to convert</param>
        </member>
    </members>
</doc>
